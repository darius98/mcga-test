#pragma once

#include "base.hpp"

#include <clocale>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cwchar>
#include <cwctype>

namespace mcga::test::mock {

struct LibCMocks {
    // clang-format off
    FunctionMock<void()> abort{"abort"};
    FunctionMock<int(int)> abs{"abs"};
    FunctionMock<double(double)> acos{"acos"};
    FunctionMock<void*(size_t, size_t)> aligned_alloc{"aligned_alloc"};
    FunctionMock<char*(const tm*)> asctime{"asctime"};
    FunctionMock<char*(const tm*, char*)> asctime_r{"asctime_r"};
    FunctionMock<double(double)> asin{"asin"};
    FunctionMock<double(double)> atan{"atan"};
    FunctionMock<double(double, double)> atan2{"atan2"};
    FunctionMock<int(void (*)())> atexit{"atexit"};
    FunctionMock<double(const char*)> atof{"atof"};
    FunctionMock<int(const char*)> atoi{"atoi"};
    FunctionMock<long(const char*)> atol{"atol"};
    FunctionMock<void*(const void*, const void*, size_t, size_t, int (*)(const void*, const void*))> bsearch{"bsearch"};
    FunctionMock<wint_t(int)> btowc{"btowc"};
    FunctionMock<void*(size_t, size_t)> calloc{"calloc"};
    FunctionMock<double(double)> ceil{"ceil"};
    FunctionMock<void(FILE*)> clearerr{"clearerr"};
    FunctionMock<clock_t()> clock{"clock"};
    FunctionMock<double(double)> cos{"cos"};
    FunctionMock<double(double)> cosh{"cosh"};
    FunctionMock<char*(const time_t*)> ctime{"ctime"};
    FunctionMock<char*(const time_t*, char*)> ctime_r{"ctime_r"};
    FunctionMock<double(time_t, time_t)> difftime{"difftime"};
    FunctionMock<div_t(int, int)> div{"div"};
    FunctionMock<double(double)> erf{"erf"};
    FunctionMock<double(double)> erfc{"erfc"};
    FunctionMock<void(int)> exit{"exit"};
    FunctionMock<double(double)> exp{"exp"};
    FunctionMock<double(double)> fabs{"fabs"};
    FunctionMock<int(FILE*)> fclose{"fclose"};
    FunctionMock<FILE*(int, const char*)> fdopen{"fdopen"};
    FunctionMock<int(FILE*)> feof{"feof"};
    FunctionMock<int(FILE*)> ferror{"ferror"};
    FunctionMock<int(FILE*)> fflush{"fflush"};
    FunctionMock<int(FILE*)> fgetc{"fgetc"};
    FunctionMock<int(FILE*, fpos_t*)> fgetpos{"fgetpos"};
    FunctionMock<char*(char*, int, FILE*)> fgets{"fgets"};
    FunctionMock<wint_t(FILE*)> fgetwc{"fgetwc"};
    FunctionMock<wchar_t*(wchar_t*, int, FILE*)> fgetws{"fgetws"};
    FunctionMock<int(FILE*)> fileno{"fileno"};
    FunctionMock<double(double)> floor{"floor"};
    FunctionMock<double(double, double)> fmod{"fmod"};
    FunctionMock<FILE*(const char*, const char*)> fopen{"fopen"};
    FunctionMock<int(int, FILE*)> fputc{"fputc"};
    FunctionMock<int(const char*, FILE*)> fputs{"fputs"};
    FunctionMock<wint_t(wchar_t, FILE*)> fputwc{"fputwc"};
    FunctionMock<int(const wchar_t*, FILE*)> fputws{"fputws"};
    FunctionMock<size_t(void*, size_t, size_t, FILE*)> fread{"fread"};
    FunctionMock<void(void*)> free{"free"};
    FunctionMock<FILE*(const char*, const char*, FILE*)> freopen{"freopen"};
    FunctionMock<double(double, int*)> frexp{"frexp"};
    FunctionMock<int(FILE*, long, int)> fseek{"fseek"};
    FunctionMock<int(FILE*, const fpos_t*)> fsetpos{"fsetpos"};
    FunctionMock<long(FILE*)> ftell{"ftell"};
    FunctionMock<int(FILE*, int)> fwide{"fwide"};
    FunctionMock<size_t(const void*, size_t, size_t, FILE*)> fwrite{"fwrite"};
    FunctionMock<double(double)> gamma{"gamma"};
    FunctionMock<int(FILE*)> getc{"getc"};
    FunctionMock<int()> getchar{"getchar"};
    FunctionMock<char*(const char*)> getenv{"getenv"};
    FunctionMock<char*(char*)> gets{"gets"};
    FunctionMock<wint_t(FILE*)> getwc{"getwc"};
    FunctionMock<wint_t()> getwchar{"getwchar"};
    FunctionMock<tm*(const time_t*)> gmtime{"gmtime"};
    FunctionMock<tm*(const time_t*, tm*)> gmtime_r{"gmtime_r"};
    FunctionMock<double(double, double)> hypot{"hypot"};
    FunctionMock<int(int)> isalnum{"isalnum"};
    FunctionMock<int(int)> isalpha{"isalpha"};
    FunctionMock<int(int)> isascii{"isascii"};
    FunctionMock<int(int)> isblank{"isblank"};
    FunctionMock<int(int)> iscntrl{"iscntrl"};
    FunctionMock<int(int)> isdigit{"isdigit"};
    FunctionMock<int(int)> isgraph{"isgraph"};
    FunctionMock<int(int)> islower{"islower"};
    FunctionMock<int(int)> isprint{"isprint"};
    FunctionMock<int(int)> ispunct{"ispunct"};
    FunctionMock<int(int)> isspace{"isspace"};
    FunctionMock<int(int)> isupper{"isupper"};
    FunctionMock<int(wchar_t)> iswalnum{"iswalnum"};
    FunctionMock<int(wchar_t)> iswalpha{"iswalpha"};
    FunctionMock<int(wchar_t)> iswblank{"iswblank"};
    FunctionMock<int(wchar_t)> iswcntrl{"iswcntrl"};
    FunctionMock<int(wchar_t, wctype_t)> iswctype{"iswctype"};
    FunctionMock<int(wchar_t)> iswdigit{"iswdigit"};
    FunctionMock<int(wchar_t)> iswgraph{"iswgraph"};
    FunctionMock<int(wchar_t)> iswlower{"iswlower"};
    FunctionMock<int(wchar_t)> iswprint{"iswprint"};
    FunctionMock<int(wchar_t)> iswpunct{"iswpunct"};
    FunctionMock<int(wchar_t)> iswspace{"iswspace"};
    FunctionMock<int(wchar_t)> iswupper{"iswupper"};
    FunctionMock<int(wchar_t)> iswxdigit{"iswxdigit"};
    FunctionMock<int(int)> isxdigit{"isxdigit"};
    FunctionMock<double(double)> j0{"j0"};
    FunctionMock<double(double)> j1{"j1"};
    FunctionMock<double(int, double)> jn{"jn"};
    FunctionMock<long(long)> labs{"labs"};
    FunctionMock<double(double, int)> ldexp{"ldexp"};
    FunctionMock<ldiv_t(long, long)> ldiv{"ldiv"};
    FunctionMock<lconv*()> localeconv{"localeconv"};
    FunctionMock<tm*(const time_t*)> localtime{"localtime"};
    FunctionMock<tm*(const time_t*, tm*)> localtime_r{"localtime_r"};
    FunctionMock<double(double)> log{"log"};
    FunctionMock<double(double)> log10{"log10"};
    FunctionMock<void*(size_t)> malloc{"malloc"};
    FunctionMock<int(const char*, size_t)> mblen{"mblen"};
    FunctionMock<size_t(const char*, size_t, mbstate_t*)> mbrlen{"mbrlen"};
    FunctionMock<size_t(wchar_t*, const char*, size_t, mbstate_t*)> mbrtowc{"mbrtowc"};
    FunctionMock<int(const mbstate_t*)> mbsinit{"mbsinit"};
    FunctionMock<size_t(wchar_t*, const char**, size_t, mbstate_t*)> mbsrtowcs{"mbsrtowcs"};
    FunctionMock<size_t(wchar_t*, const char*, size_t)> mbstowcs{"mbstowcs"};
    FunctionMock<int(wchar_t*, const char*, size_t)> mbtowc{"mbtowc"};
    FunctionMock<void*(const void*, int, size_t)> memchr{"memchr"};
    FunctionMock<int(const void*, const void*, size_t)> memcmp{"memcmp"};
    FunctionMock<void*(void*, const void*, size_t)> memcpy{"memcpy"};
    FunctionMock<void*(void*, const void*, size_t)> memmove{"memmove"};
    FunctionMock<void*(void*, int, size_t)> memset{"memset"};
    FunctionMock<time_t(tm*)> mktime{"mktime"};
    FunctionMock<double(double, double*)> modf{"modf"};
    FunctionMock<double(double, double)> nextafter{"nextafter"};
    FunctionMock<long double(long double, long double)> nextafterl{"nextafterl"};
    FunctionMock<double(double, long double)> nexttoward{"nexttoward"};
    FunctionMock<long double(long double, long double)> nexttowardl{"nexttowardl"};
    FunctionMock<void(const char*)> perror{"perror"};
    FunctionMock<double(double, double)> pow{"pow"};
    FunctionMock<int(int, FILE*)> putc{"putc"};
    FunctionMock<int(int)> putchar{"putchar"};
    FunctionMock<int(char*)> putenv{"putenv"};
    FunctionMock<int(const char*)> puts{"puts"};
    FunctionMock<wint_t(wchar_t, FILE*)> putwc{"putwc"};
    FunctionMock<wint_t(wchar_t)> putwchar{"putwchar"};
    FunctionMock<void(void*, size_t, size_t, int (*)(const void*, const void*))> qsort{"qsort"};
    FunctionMock<int(int)> raise{"raise"};
    FunctionMock<int()> rand{"rand"};
    FunctionMock<int(unsigned*)> rand_r{"rand_r"};
    FunctionMock<void*(void*, size_t)> realloc{"realloc"};
    FunctionMock<int(const char*)> remove{"remove"};
    FunctionMock<int(const char*, const char*)> rename{"rename"};
    FunctionMock<void(FILE*)> rewind{"rewind"};
    FunctionMock<void(FILE*, char*)> setbuf{"setbuf"};
    FunctionMock<char*(int, const char*)> setlocale{"setlocale"};
    FunctionMock<int(FILE*, char*, int, size_t)> setvbuf{"setvbuf"};
    FunctionMock<double(double)> sin{"sin"};
    FunctionMock<double(double)> sinh{"sinh"};
    FunctionMock<double(double)> sqrt{"sqrt"};
    FunctionMock<void(unsigned)> srand{"srand"};
    FunctionMock<int(const char*, const char*)> strcasecmp{"strcasecmp"};
    FunctionMock<char*(char*, const char*)> strcat{"strcat"};
    FunctionMock<char*(const char*, int)> strchr{"strchr"};
    FunctionMock<int(const char*, const char*)> strcmp{"strcmp"};
    FunctionMock<int(const char*, const char*)> strcoll{"strcoll"};
    FunctionMock<char*(char*, const char*)> strcpy{"strcpy"};
    FunctionMock<size_t(const char*, const char*)> strcspn{"strcspn"};
    FunctionMock<char*(int)> strerror{"strerror"};
    FunctionMock<size_t(char*, size_t, const char*, const tm*)> strftime{"strftime"};
    FunctionMock<size_t(const char*)> strlen{"strlen"};
    FunctionMock<int(const char*, const char*, size_t)> strncasecmp{"strncasecmp"};
    FunctionMock<char*(char*, const char*, size_t)> strncat{"strncat"};
    FunctionMock<int(const char*, const char*, size_t)> strncmp{"strncmp"};
    FunctionMock<char*(char*, const char*, size_t)> strncpy{"strncpy"};
    FunctionMock<char*(const char*, const char*)> strpbrk{"strpbrk"};
    FunctionMock<char*(const char*, const char*, tm*)> strptime{"strptime"};
    FunctionMock<char*(const char*, int)> strrchr{"strrchr"};
    FunctionMock<size_t(const char*, const char*)> strspn{"strspn"};
    FunctionMock<char*(const char*, const char*)> strstr{"strstr"};
    FunctionMock<double(const char*, char**)> strtod{"strtod"};
    FunctionMock<float(const char*, char**)> strtof{"strtof"};
    FunctionMock<char*(char*, const char*)> strtok{"strtok"};
    FunctionMock<char*(char*, const char*, char**)> strtok_r{"strtok_r"};
    FunctionMock<long(const char*, char**, int)> strtol{"strtol"};
    FunctionMock<long double(const char*, char**)> strtold{"strtold"};
    FunctionMock<unsigned long(const char*, char**, int)> strtoul{"strtoul"};
    FunctionMock<size_t(char*, const char*, size_t)> strxfrm{"strxfrm"};
    FunctionMock<int(const char*)> system{"system"};
    FunctionMock<double(double)> tan{"tan"};
    FunctionMock<double(double)> tanh{"tanh"};
    FunctionMock<time_t(time_t*)> time{"time"};
    FunctionMock<FILE*()> tmpfile{"tmpfile"};
    FunctionMock<char*(char*)> tmpnam{"tmpnam"};
    FunctionMock<int(int)> toascii{"toascii"};
    FunctionMock<int(int)> tolower{"tolower"};
    FunctionMock<int(int)> toupper{"toupper"};
    FunctionMock<wint_t(wint_t, wctrans_t)> towctrans{"towctrans"};
    FunctionMock<wchar_t(wchar_t)> towlower{"towlower"};
    FunctionMock<wchar_t(wchar_t)> towupper{"towupper"};
    FunctionMock<int(int, FILE*)> ungetc{"ungetc"};
    FunctionMock<wint_t(wint_t, FILE*)> ungetwc{"ungetwc"};
    FunctionMock<int(FILE*, const char*, va_list)> vfprintf{"vfprintf"};
    FunctionMock<int(FILE*, const char*, va_list)> vfscanf{"vfscanf"};
    FunctionMock<int(FILE*, const wchar_t*, va_list)> vfwprintf{"vfwprintf"};
    FunctionMock<int(FILE*, const wchar_t*, va_list)> vfwscanf{"vfwscanf"};
    FunctionMock<int(const char*, va_list)> vprintf{"vprintf"};
    FunctionMock<int(const char*, va_list)> vscanf{"vscanf"};
    FunctionMock<int(char*, const char*, va_list)> vsprintf{"vsprintf"};
    FunctionMock<int(char*, size_t, const char*, va_list)> vsnprintf{"vsnprintf"};
    FunctionMock<int(const char*, const char*, va_list)> vsscanf{"vsscanf"};
    FunctionMock<int(wchar_t*, size_t, const wchar_t*, va_list)> vswprintf{"vswprintf"};
    FunctionMock<int(const wchar_t*, const wchar_t*, va_list)> vswscanf{"vswscanf"};
    FunctionMock<int(const wchar_t*, va_list)> vwprintf{"vwprintf"};
    FunctionMock<int(const wchar_t*, va_list)> vwscanf{"vwscanf"};
    FunctionMock<size_t(char* s, wchar_t, mbstate_t*)> wcrtomb{"wcrtomb"};
    FunctionMock<wchar_t*(wchar_t*, const wchar_t*)> wcscat{"wcscat"};
    FunctionMock<wchar_t*(const wchar_t*, wchar_t)> wcschr{"wcschr"};
    FunctionMock<int(const wchar_t*, const wchar_t*)> wcscmp{"wcscmp"};
    FunctionMock<int(const wchar_t*, const wchar_t*)> wcscoll{"wcscoll"};
    FunctionMock<wchar_t*(wchar_t*, const wchar_t*)> wcscpy{"wcscpy"};
    FunctionMock<size_t(const wchar_t*, const wchar_t*)> wcscspn{"wcscspn"};
    FunctionMock<size_t(wchar_t*, size_t, const wchar_t*, const tm*)> wcsftime{"wcsftime"};
    FunctionMock<size_t(const wchar_t*)> wcslen{"wcslen"};
    FunctionMock<wchar_t*(wchar_t*, const wchar_t*, size_t)> wcsncat{"wcsncat"};
    FunctionMock<int(const wchar_t*, const wchar_t*, size_t)> wcsncmp{"wcsncmp"};
    FunctionMock<wchar_t*(wchar_t*, const wchar_t*, size_t)> wcsncpy{"wcsncpy"};
    FunctionMock<wchar_t*(const wchar_t*, const wchar_t*)> wcspbrk{"wcspbrk"};
    FunctionMock<wchar_t*(const wchar_t*, wchar_t)> wcsrchr{"wcsrchr"};
    FunctionMock<size_t(char*, const wchar_t**, size_t, mbstate_t*)> wcsrtombs{"wcsrtombs"};
    FunctionMock<size_t(const wchar_t*, const wchar_t*)> wcsspn{"wcsspn"};
    FunctionMock<wchar_t*(const wchar_t*, const wchar_t*)> wcsstr{"wcsstr"};
    FunctionMock<double(const wchar_t*, wchar_t**)> wcstod{"wcstod"};
    FunctionMock<float(const wchar_t*, wchar_t**)> wcstof{"wcstof"};
    FunctionMock<wchar_t*(wchar_t*, const wchar_t*, wchar_t**)> wcstok{"wcstok"};
    FunctionMock<long(const wchar_t*, wchar_t**, int)> wcstol{"wcstol"};
    FunctionMock<long double(const wchar_t*, wchar_t**)> wcstold{"wcstold"};
    FunctionMock<size_t(char*, const wchar_t*, size_t)> wcstombs{"wcstombs"};
    FunctionMock<unsigned long(const wchar_t*, wchar_t**, int)> wcstoul{"wcstoul"};
    FunctionMock<size_t(wchar_t*, const wchar_t*, size_t)> wcsxfrm{"wcsxfrm"};
    FunctionMock<int(wint_t)> wctob{"wctob"};
    FunctionMock<int(char*, wchar_t)> wctomb{"wctomb"};
    FunctionMock<wctrans_t(const char*)> wctrans{"wctrans"};
    FunctionMock<wctype_t(const char*)> wctype{"wctype"};
    FunctionMock<int(wchar_t)> wcwidth{"wcwidth"};
    FunctionMock<wchar_t*(const wchar_t*, wchar_t, size_t)> wmemchr{"wmemchr"};
    FunctionMock<int(const wchar_t*, const wchar_t*, size_t)> wmemcmp{"wmemcmp"};
    FunctionMock<wchar_t*(wchar_t*, const wchar_t*, size_t)> wmemcpy{"wmemcpy"};
    FunctionMock<wchar_t*(wchar_t*, const wchar_t*, size_t)> wmemmove{"wmemmove"};
    FunctionMock<wchar_t*(wchar_t*, wchar_t, size_t)> wmemset{"wmemset"};
    FunctionMock<double(double)> y0{"y0"};
    FunctionMock<double(double)> y1{"y1"};
    FunctionMock<double(int, double)> yn{"yn"};

    FunctionMock<int(FILE*, const char*, ...)> fprintf{&vfprintf};
    FunctionMock<int(FILE*, const char*, ...)> fscanf{&vfscanf};
    FunctionMock<int(FILE*, const wchar_t*, ...)> fwprintf{&vfwprintf};
    FunctionMock<int(FILE*, const wchar_t*, ...)> fwscanf{&vfwscanf};
    FunctionMock<int(const char*, ...)> printf{&vprintf};
    FunctionMock<int(const char*, ...)> scanf{&vscanf};
    FunctionMock<int(char*, size_t, const char*, ...)> snprintf{&vsnprintf};
    FunctionMock<int(char*, const char*, ...)> sprintf{&vsprintf};
    FunctionMock<int(const char*, const char*, ...)> sscanf{&vsscanf};
    FunctionMock<int(wchar_t*, size_t, const wchar_t*, ...)> swprintf{&vswprintf};
    FunctionMock<int(const wchar_t*, const wchar_t*, ...)> swscanf{&vswscanf};
    FunctionMock<int(const wchar_t*, ...)> wprintf{&vwprintf};
    FunctionMock<int(const wchar_t*, ...)> wscanf{&vwscanf};
    // clang-format on
};

extern LibCMocks libc;

}  // namespace mcga::test::mock
